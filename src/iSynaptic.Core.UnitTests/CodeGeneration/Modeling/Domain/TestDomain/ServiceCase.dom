using System;

namespace iSynaptic.TestDomain
{
    aggregate<ServiceCaseId> ServiceCase : Base
    {
		value CaseDescription : string;
		value Details
		{
			Int32 LastThreadId;
			CommunicationThreadSnapshot* ThreadSnapshots;
			String Title;
			CaseDescription Description;
			Priority ServiceCasePriority;
		}

		enum Priority
		{
			Low,
			Normal,
			High
		}


        [Annotation(Key = "Value")]
        snapshot Snapshot
        {
            [Annotation(Key = "Value")]
            Int32 LastThreadId;
            CommunicationThreadSnapshot* ThreadSnapshots;
            String Title;
            CaseDescription Description;
            Priority Priority;
        }

		[Event(Version = "3")]
        event Opened : BaseEvent
        {
            String Title;
            CaseDescription Description;
            Priority Priority;
        }

        event CommunicationThreadStarted : BaseEvent
        {
            Int32 ThreadId;
            String Topic;
            CaseDescription Description;
        }

        event CommunicationRecorded : BaseEvent
        {
            Int32 ThreadId;
            CommunicationDirection Direction;
            String Content;
            DateTime CommunicationTime;
			TimeSpan Duration;
        }
    }
}
